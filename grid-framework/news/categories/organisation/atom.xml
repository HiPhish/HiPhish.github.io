<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>HiPhish's Workshop</title><link href="http://hiphish.github.io/" rel="alternate"></link><link href="http://192.168.0.190:8000/grid-framework/news/categories/organisation/atom.xml" rel="self"></link><id>http://hiphish.github.io/</id><updated>2016-01-02T00:00:00+01:00</updated><entry><title>What's coming in 2016</title><link href="http://hiphish.github.io/grid-framework/news/2016/01/02/new-year-2016/" rel="alternate"></link><updated>2016-01-02T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2016-01-02:grid-framework/news/2016/01/02/new-year-2016/</id><summary type="html">&lt;p&gt;It's the start of a new year,  time to look back and look ahead.  2015 has seen
the  release  of  the  new  website,  which  was  later that same year scrapped
completely for a yet another website.  I was also able to finally integrate the
last of the originally planned grids into Grid Framework.&lt;/p&gt;
&lt;p&gt;During this time I have been weighted down by my own mistakes quite a lot. When
I originally wrote Grid Framework I was fairly inexperienced, my knowledge came
mostly  from  textbooks and  things you  learn in  classes.  There was  nothing
&lt;em&gt;techincally&lt;/em&gt;  wrong about what  I had  learned,  the framework was functioning
correctly, but maintainability was getting worse and worse over time. There are
some things textbooks simply can't teach you.&lt;/p&gt;
&lt;p&gt;This  is why I  have  decided to  start work  on  Grid  Framework  version 2.0.
Following the rules of &lt;a class="reference external" href="http://semver.org"&gt;Semantic Versioning&lt;/a&gt; this means  that version 2.0 will
not be API-compatible with previous versions.  This is a clean cut, but it will
result in a leaner and  cleaner API for users as well,  and everything  removed
from the old API will  have an almost 1:1  equivalent. If you cannot migrate to
2.0 the old 1.x  branch will still be  maintained with  bug-fixes if necessary.
The upgrade will be free to existing customers.&lt;/p&gt;
&lt;div class="section" id="why-version-2-0"&gt;
&lt;h2&gt;Why version 2.0?&lt;/h2&gt;
&lt;p&gt;I will try to explain my reasons for breaking backwards-compatibility. Making a
version 2.0 was going to happen sooner or later anyway, so why now?&lt;/p&gt;
&lt;div class="section" id="the-classes-are-simply-too-large"&gt;
&lt;h3&gt;The classes are simply too large&lt;/h3&gt;
&lt;p&gt;At the  time of  writing this Grid Framework  is at version 1.9.0  and this  is
the number of lines in the code:&lt;/p&gt;
&lt;table border="1" class=" table-striped docutils table-hover table"&gt;
&lt;colgroup&gt;
&lt;col width="38%"&gt;&lt;/col&gt;
&lt;col width="12%"&gt;&lt;/col&gt;
&lt;col width="21%"&gt;&lt;/col&gt;
&lt;col width="15%"&gt;&lt;/col&gt;
&lt;col width="15%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Class&lt;/th&gt;
&lt;th class="head"&gt;Code&lt;/th&gt;
&lt;th class="head"&gt;Comment&lt;/th&gt;
&lt;th class="head"&gt;Blank&lt;/th&gt;
&lt;th class="head"&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;GFGrid&lt;/td&gt;
&lt;td&gt;520&lt;/td&gt;
&lt;td&gt;512&lt;/td&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;1136&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;GFRectGrid&lt;/td&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;167&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;420&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;GFSphereGrid&lt;/td&gt;
&lt;td&gt;356&lt;/td&gt;
&lt;td&gt;615&lt;/td&gt;
&lt;td&gt;92&lt;/td&gt;
&lt;td&gt;1063&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;GFHexGrid&lt;/td&gt;
&lt;td&gt;1257&lt;/td&gt;
&lt;td&gt;1102&lt;/td&gt;
&lt;td&gt;241&lt;/td&gt;
&lt;td&gt;2600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;GFPolarGrid&lt;/td&gt;
&lt;td&gt;395&lt;/td&gt;
&lt;td&gt;366&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;835&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This is simply too much,  especially for  hexagonal grids.  How did  it come to
this?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="do-one-thing-and-do-it-well"&gt;
&lt;h3&gt;Do one thing and do it well&lt;/h3&gt;
&lt;p&gt;What is a &lt;em&gt;grid&lt;/em&gt; in the first place?  In my case it is a coordinate system.  So
what does a coordinate system do? It can convert coordinates for example.  What
it does  not do  is  render  itself  or  align objects.  It &lt;em&gt;can&lt;/em&gt;  be used  for
such purpose,  but that not what it does itself.  And yet these tasks make up a
big part of the code, especially in hexagonal grids with their many shapes.&lt;/p&gt;
&lt;p&gt;Rendering  will  be  moved into  dedicated &lt;em&gt;renderer&lt;/em&gt;  components. Unity does a
similar thing for meshes:  the &lt;code&gt;Mesh&lt;/code&gt; class does not render the mesh, the class
&lt;code&gt;MeshRenderer&lt;/code&gt; does.  New grid shapes are then simply new renderers,  making it
very easy for users to swap out renderers or even write their own ones.&lt;/p&gt;
&lt;p&gt;Other  functions  can  be moved  into special  utility  classes,  I haven't yet
decided on that one, but they will be moved out of the grid for certain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="less-is-more"&gt;
&lt;h3&gt;Less is more&lt;/h3&gt;
&lt;p&gt;Some API features  fall into the  "nice to have,  but not necessary"  category.
Take for example the &lt;code&gt;hideGridOnPlay&lt;/code&gt; flag:  when it is &lt;code&gt;true&lt;/code&gt; the grid will be
hidden while the game is  running but visible in scene view.  Sounds handy, but
it's not really needed when we could use this instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;GFGrid&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hideGrid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And while we're at it,  why do we even have a flag  for hiding the  entire grid
when we have flags for the individual axes. Theses "nice to have" features will
be cut out entirely.  It might seem like a regression at first, but the gain in
productivity from leaner and more  readable API will easily make up for the few
extra lines of code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="you-ain-t-gonna-need-it"&gt;
&lt;h3&gt;You ain't gonna need it&lt;/h3&gt;
&lt;p&gt;When I originally wrote Grid Framework I had  this great idea that you would be
able to call a method on any grid and it would always  do what you would expect
it to do. Sadly some concepts  just don't make sense for every grid. Take as an
example  &lt;em&gt;scaling&lt;/em&gt; an  object to  the  grid.  This makes  perfect  sense  for a
rectangular grid because an  object's &lt;code&gt;Transform&lt;/code&gt; is a cuboid box as well.  But
how do you scale  a cuboid in a honeycomb,  a circle or a sphere?  It just does
not make sense to ask such a question. I will have to see what to keep and what
to just throw out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;TL;RD:  It's time to cut off the ugly growth,  and see which parts  have actual
value. Those will be moved to dedicated classes, giving you a nicer API to work
with and make the code more maintainable.&lt;/p&gt;
&lt;p&gt;At the moment I'm refactoring the renderers out,  this will already shave off a
huge chunk  of code.  Then I'll see  what's next,  I don't want  to cut off too
much, but on the other hand  if I don't cut it off now it will have to wait for
version 3.0.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="grid-framework-for-other-engines"&gt;
&lt;h2&gt;Grid Framework for other engines&lt;/h2&gt;
&lt;p&gt;2015 has seen a big change in how game engines are licensed.  Unity Pro, Unreal
4 and Source are now available free of charge for development.  This is a great
opportunity to port Grid Framework to those engine as well. This has been a big
motivator  as well for  starting version 2.0,  now that all the  original goals
have been met.  Currently all the classes are too dependent on Unit's API. With
smaller classes and a cleaner API it is much easier to keep different codebases
in synch feature-wise.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="in-summary"&gt;
&lt;h2&gt;In summary&lt;/h2&gt;
&lt;p&gt;I don't have to  announce anything in regards  to other engines yet,  I want to
finish the  move to version  2.0 first  and solidify  the API.  In the meantime
there is no reason  to wait for 2.0 if you want to be productive,  the features
to be dropped have  proven themselves  to be barely useful  anyway and the rest
will have pretty  much 1:1 equivalents.  The 1.x code is  not defective,  it is
just large, so don't worry about using the old API.  And as I said, the upgrade
will be free to existing customers.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Korean Asset Store description removed</title><link href="http://hiphish.github.io/grid-framework/news/2015/11/17/no-korean/" rel="alternate"></link><updated>2015-11-17T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-11-17:grid-framework/news/2015/11/17/no-korean/</id><summary type="html">&lt;p&gt;I don't know why I even had a Korean Asset Store presentation in the first
place, given that I don't speak Korean. I guess Unity must have auto-generated
it based on my English description. Since I cannot verify nor maintain the
information there I have removed it. So if any Korean customers are wondering
what happened, that's the reason.&lt;/p&gt;
</summary><category term="asset-store"></category></entry><entry><title>A new blog for Grid Framework</title><link href="http://hiphish.github.io/grid-framework/news/2015/11/12/new-blog/" rel="alternate"></link><updated>2015-11-14T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-11-12:grid-framework/news/2015/11/12/new-blog/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Feeds are live now, see the navigator. You can even subscribe to
just a category such as &lt;em&gt;release&lt;/em&gt; for instance by navigating to that category
and using the links in the top right-hand corner.&lt;/p&gt;
&lt;p&gt;Welcome to the new blog for Grid Framework on the new website. I have migrated
all the old blog posts here as well (with all typos and everything). The old
blog is still available for the time being, but I won't post anything there
anymore.&lt;/p&gt;
&lt;p&gt;This website has support for multiple blogs, so this blog will from now on be
used for news only. Once I have feeds working you will also be able to
subscribe to get the latests news delivered right to you.&lt;/p&gt;
&lt;p&gt;That's if for now, this was the last step needed in the migration to the new
website.&lt;/p&gt;
</summary></entry><entry><title>New website</title><link href="http://hiphish.github.io/grid-framework/news/2015/10/26/new-website/" rel="alternate"></link><updated>2015-10-26T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-10-26:grid-framework/news/2015/10/26/new-website/</id><summary type="html">&lt;p&gt;Over the last few months I have been busy redesigning the website and we are
finally live now. Check it out:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hiphish.github.io/grid-framework/"&gt;http://hiphish.github.io/grid-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The new website has been rewritten from scratch, but all the old links are
still valid. It is now a modern site that looks good on desktops, on tablets,
on phones and even in text mode. All content is static and the site works fine
with and without JavaScript enabled in your browser.&lt;/p&gt;
&lt;div class="section" id="showcase-your-work"&gt;
&lt;h2&gt;Showcase your work&lt;/h2&gt;
&lt;p&gt;Judging by the five-star reviews you all seem to like Grid Framework, but what
are you using it for? I want to have a showcase page on the website where I can
show off some of the games made using Grid Framework. If you want your game
featured drop me a line, include a screenshot (or give me permission to pick
one myself) and a few sentences about your game and what you used Grid
Framework for. I'm looking forward to seeing all the cool uses you came up
with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="about-the-new-website"&gt;
&lt;h2&gt;About the new website&lt;/h2&gt;
&lt;p&gt;The original website was made from hand-written HTML and CSS. While I like the
pure hands-on approach it became quickly apparent that that wouldn't cut it in
the long run. Take for example the navigation bar: It has to appear on every
page, it has to be the same everywhere and the currently active item has to be
highlighted. HTML has no interactive elements and no way to include snippets. I
could have used JavaScript, but then the site would break down it people don't
have JavaScript enabled.&lt;/p&gt;
&lt;p&gt;I was looking into different solutions and settled for Pelican. Pelican is a
static site generator, meaning you write template HTML pages with placeholders
and you write your content separately. Pelican then generates the finished
website from your template, content and a number of settings. This has all the
benefits of being static while being easy to maintain.&lt;/p&gt;
&lt;p&gt;For the actual website I decided instead of reinventing the wheel I would just
leverage the work of people who know more about web development than me. I use
Bootstrap as my CSS framework and jQuery for light JavaScript decoration. I
also now have a proper gallery using Pretty Photo library. You can find a list
of all components on the &lt;a class="reference external" href="http://hiphish.github.io/about"&gt;about&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;One final note about JavaScript if you are concerned about proprietary code:
all the foreign code is free software and the code I have written is free as
well (MIT licensed), no need to worry.&lt;/p&gt;
&lt;p&gt;What is still missing is the blog. Because I intend the Workshop to be home to
all my projects it would be a bad idea to lump all news into the same blog.
Pelican has no capability of producing multiple blogs, I will have to write a
multiblog plugin instead. Until then this blog stays the news site.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="old-blog"></category></entry><entry><title>Playable examples</title><link href="http://hiphish.github.io/grid-framework/news/2015/01/27/playable-examples/" rel="alternate"></link><updated>2015-01-27T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-01-27:grid-framework/news/2015/01/27/playable-examples/</id><summary type="html">&lt;p&gt;I have added playable builds of the examples to the website, now you can click
the title of an example and try the result out in the Web Player. To get back
click on the &lt;em&gt;Grid Framework examples&lt;/em&gt; label above the player. Just remember
that you have to click into the player to get it to accept input.&lt;/p&gt;
&lt;p&gt;Check out the web pages:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hiphish.github.io/grid-framework/examples/"&gt;http://hiphish.github.io/grid-framework/examples/&lt;/a&gt;&lt;/p&gt;
</summary><category term="old-blog"></category><category term="example"></category></entry><entry><title>A homepage for Grid Framework</title><link href="http://hiphish.github.io/grid-framework/news/2015/01/16/homepage/" rel="alternate"></link><updated>2015-01-16T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-01-16:grid-framework/news/2015/01/16/homepage/</id><summary type="html">&lt;p&gt;Grid Framework now has its own homepage:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hiphish.github.io/grid-framework/"&gt;http://hiphish.github.io/grid-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have been running this blog now for almost three years, which is way too long
to go without a proper website. Back when I had just started out I didn't know
if Grid Framework would ever take off, so I organised everything in a quick &amp;amp;
simple manner, but I think it's finally time to step up my presentation.&lt;/p&gt;
&lt;p&gt;The site is hosted on GitHub, so you can browse the source code if you wish,
it's all handwritten in HTML and CSS, nothing fancy. There are still a few
things I would like to overhaul, like a proper screenshot gallery, playable
examples and redo the videos. But for now the site is at least presentable.&lt;/p&gt;
&lt;p&gt;If you have any suggestions or find display errors on some devices please let
me know.&lt;/p&gt;
</summary><category term="old-blog"></category></entry></feed>