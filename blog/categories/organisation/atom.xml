<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>HiPhish's Workshop - organisation</title><link href="http://hiphish.github.io/" rel="alternate"></link><link href="http://127.0.1.1:8000/blog/categories/organisation/atom.xml" rel="self"></link><id>http://hiphish.github.io/</id><updated>2018-12-01T00:00:00+01:00</updated><entry><title>Goodbye macOS, hello GNU/Linux</title><link href="http://hiphish.github.io/blog/2018/12/01/gnu-linux/" rel="alternate"></link><published>2018-12-01T00:00:00+01:00</published><updated>2018-12-01T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2018-12-01:/blog/2018/12/01/gnu-linux/</id><summary type="html">&lt;p&gt;I knew this day would come eventually, so here we are: I moved from macOS to
GNU/Linux as my operating system. It has been a couple of months since then and
I have settled in pretty comfortably; some things are better some things are
worse, and some things are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I knew this day would come eventually, so here we are: I moved from macOS to
GNU/Linux as my operating system. It has been a couple of months since then and
I have settled in pretty comfortably; some things are better some things are
worse, and some things are just plain different.&lt;/p&gt;
&lt;p&gt;The distribution I have picked is Kubuntu. I did not have the time for
experimenting with a new operating system, so I wanted something that would
work out of the box for the most part and provide sensible default software. I
can still switch to a different distro eventually, but this is where I am for
now. Now it just happened that my switch coincided with Ubuntu abandoning the
Unity desktop environment in favour of Gnome 3, and I don't have the best
opinion of Gnome 3. So I picked the KDE flavour of Ubuntu and it has been
pretty nice.&lt;/p&gt;
&lt;p&gt;Why switch in the first place? Well, my old Mac was getting really old, it did
not support the recent macOS releases and security update for my version were
about to stop (the Specre patch was the last one as far as I know). At the same
time Apple was making macOS just worse: more locked down, removing Free and
Open APIs like OpenGL, and the only "improvements" were just further
integration into the iEcosystem. Add to that Apple devices have been getting
even more expensive in recent years. There was no way I was switching back to
Windows either, that would be even worse.&lt;/p&gt;
&lt;p&gt;At the same time, the Free desktop environments have been taking notes and made
improvements to the point where I can seriously say that using GNU/Linux is
easier than using Windows or macOS. So here I am, finally on a real Free
Software operating system, as it should be.&lt;/p&gt;
&lt;div class="section" id="making-kde-more-mac-like"&gt;
&lt;h2&gt;Making KDE more Mac-like&lt;/h2&gt;
&lt;p&gt;The nice thing about KDE is how customisable it is by default. I was able to
replicate the Mac desktop using only what is shipped by default within a day or
so with no prior experience with KDE.&lt;/p&gt;
&lt;p&gt;The first thing I did was remove the existing panels, and instead create a
panel at the top and one on the side. The side panel is my "dock" and the top
panel is the global menu bar.&lt;/p&gt;
&lt;p&gt;The dock contains an icons-only task manager widget, a trashcan widget, a
folder view widget for my downloads folder and a couple of handy widgets as
well. This replicates the Mac dock very well.&lt;/p&gt;
&lt;p&gt;The top panel contains an applications menu widget, the global menu bar widget
and a whole bunch of status icons widgets on the right. Sadly the global menu
does not work with all GUI frameworks, but most of my applications are written
in Qt, so that's OK.&lt;/p&gt;
&lt;p&gt;There are real dock applications like Plank and Latte Dock, but I found that
those don't work as well as a panel with widgets and take longer to load. Yes,
they look fancier, but I don't really care. Functionality is more important
than appearance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="new-and-old-applications"&gt;
&lt;h2&gt;New and old applications&lt;/h2&gt;
&lt;p&gt;With a new operating system there comes a new set of applications to choose
from. All my command-line applications I was able to keep, which is very good,
since those are my heavy lifters. My complex &lt;a class="reference external" href="https://gitlab.com/HiPhish/nvim-config"&gt;Neovim setup&lt;/a&gt; worked with very few
adjustments as well, so I was able to get back to work very quickly.&lt;/p&gt;
&lt;p&gt;What I really miss are the old iWork, iLife and Pixelmator. Those applications
had really nailed the user interface in every detail. I said &lt;em&gt;old&lt;/em&gt; because
nothing good can last forever, Apple had rewritten iWork and iLife, and the new
applications are really not as good. The old ones would have stopped working
eventually anyway, so I guess I would have had to switch sooner or later
anyway. LibreOffice and Gimp just are not as nice, but oh well, that's what I'm
stuck with, so I'll have to suck it down. Maybe I can use Krita for some image
editing tasks as well.&lt;/p&gt;
&lt;p&gt;Unity has been my biggest roadblock in regards to making the switch. There is
still no official Unity Editor builds for GNU/Linux, only the eternal beta.
Since I sell &lt;a class="reference external" href="http://hiphish.github.io/grid-framework/"&gt;Grid Framework&lt;/a&gt; I have to be able to run Unity. Fortunately the
beta works good enough for my needs, so I'm good to go.&lt;/p&gt;
&lt;p&gt;There is no Wineskin on GNU/Linux, so I settled for PlayOnLinux. Honestly, I
could have used Wine without frontend just fine, but the biggest advantage of
PlayOnLinux is that it lets me have different versions of Wine per program and
switch them out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="package-management-madness"&gt;
&lt;h2&gt;Package management madness&lt;/h2&gt;
&lt;p&gt;On macOS you don't have a package manager, you use what Apple gives you and you
better learn to like it that way. This is good because it gives you a stable
system of curated packages. It is also bad because if you disagree with Apple's
choice you are stuck.&lt;/p&gt;
&lt;p&gt;This is why third-party package managers like Homebrew exist. The cool part
about Homebrew is that it stays out of the system's way: packages are installed
in &lt;code&gt;/usr/local/&lt;/code&gt; and don't require &lt;code&gt;sudo&lt;/code&gt;. Actually, packages are not installed
into &lt;code&gt;/usr/local/&lt;/code&gt;, but &lt;code&gt;/usr/local/Cellar&lt;/code&gt;, each in its own directory, and
then everything is symlinked into place.&lt;/p&gt;
&lt;p&gt;On Ubuntu your package manager is &lt;code&gt;apt&lt;/code&gt;, it installs every package into the
system directly. If anything happens during an installation of upgrade your
system will be all messed up because &lt;code&gt;apt&lt;/code&gt; is directly messing with the system
directories. But seriously, how often does that happen? No, the bigger problem
is when you want a more recent version of a package and start adding PPAs. One
or two PPAs are not a big deal, but with every new PPA you are messing with a
curated collection of packages and introducing instability to the system.&lt;/p&gt;
&lt;p&gt;This is where distro-agnostic package managers come in. Flatpak is a common
one, it simply bundles the dependencies of each package. However, the real
solution in my opinion at least are functional package managers like &lt;a class="reference external" href="https://nixos.org/o"&gt;Nix&lt;/a&gt; and
&lt;a class="reference external" href="https://www.gnu.org/software/guix/"&gt;Guix&lt;/a&gt;. I picked Guix for the time being because I like that it uses Scheme for
its packages, but we'll see about that. I'm trying to do as much package
management through Guix instead of &lt;code&gt;apt&lt;/code&gt; now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="password-management"&gt;
&lt;h2&gt;Password management&lt;/h2&gt;
&lt;p&gt;To my shame I have to admit that I was using the proprietary 1Password for
years. Yes, trusting a proprietary application with your passwords is a really
bright idea, I know. It was just too convenient to give up, but with that
option gone I had to find a substitute. I think &lt;code&gt;pass&lt;/code&gt; fits the bill very well:
it uses PGP for encryption, plain text files and directories for storing data
and has a nice terminal interface. Honestly, what more do I even want? This is
the sort of application which you want to be as simple as it can be, because
the more parts there are, the more can break.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="where-to-go-from-here"&gt;
&lt;h2&gt;Where to go from here&lt;/h2&gt;
&lt;p&gt;So what was the point of this post? I don't really know, I guess I just felt
like writing it. I'm very satisfied how things have turned out, so I'm going to
stay like this for the foreseeable future.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Rewriting the Workshop</title><link href="http://hiphish.github.io/blog/2016/09/27/rewriting-the-workshop/" rel="alternate"></link><published>2016-09-27T00:00:00+02:00</published><updated>2016-09-27T00:00:00+02:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2016-09-27:/blog/2016/09/27/rewriting-the-workshop/</id><summary type="html">&lt;p&gt;At this point I  could start to make rewriting  my website an annual tradition.
There have been a number of little  details that have been rubbing me the wrong
way for almost a year now;  the biggest one was the navigation bar on sub-sites
like the  Grid Framework  product site …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At this point I  could start to make rewriting  my website an annual tradition.
There have been a number of little  details that have been rubbing me the wrong
way for almost a year now;  the biggest one was the navigation bar on sub-sites
like the  Grid Framework  product site.  There were  also accessibility  issues
relating  to  the lack  of a  proper  HTML  document  outline  and  the  use of
JavaScript.&lt;/p&gt;
&lt;div class="section" id="the-sub-site-navigation-bar"&gt;
&lt;h2&gt;The sub-site navigation bar&lt;/h2&gt;
&lt;p&gt;Until now I had simply been using the same standard navigation bar that is also
on top of every page.  This worked,  but it was pretty ugly because even though
one bar was clearly subordinate both looked the same. The sub-site bar needs to
be smaller and less prominent.&lt;/p&gt;
&lt;p&gt;The solution was to  roll my own code for  my own sub-site navigation bar.  The
bar itself is simply  a plain &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;  and I am using the  CSS flexbox module to
style it. Here is what the HTML looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"sub-site-nav"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sub-site navigation bar&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Title&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Item 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Item 2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Item 3&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Item 4&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it,  we only specify that  our &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; is a  sub-site navigation bar and
let the CSS style the elements accordingly. You will also notice that the title
is part of the list as well; I will use CSS to style the title differently, but
some people prefer to  make the title a separate element from the list.  I made
it  part of  the list  because  despite the  visual  distinction it is  all one
navigation bar and the title should be counted when enumerating the list.&lt;/p&gt;
&lt;p&gt;With the content set  in place we can start applying the style to it.  Since we
have wrapped everything  inside a &lt;code&gt;.sub-site-nav&lt;/code&gt;  item we style only its child
elements.  First let's  hide the  heading,  it's  only used  for   the document
outline.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sub-site-nav&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now comes the interesting part: the list.  I am using the CSS flexbox module to
style the site, it's a fairly new feature that allows us to pass specifications
in CSS on how to distribute elements and let the browser figure out the optimum
instead of computing values by hand. To this end we have to declare the list to
be a flex container&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sub-site-nav&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The  last property  &lt;code&gt;justify-content: flex-end&lt;/code&gt;  will push all elements  to the
right while preserving their order  (non-flexbox hacks would always reverse the
order).  We are almost done,  but in order to make the  navigation look good we
have to make the title stand out from the other list items.  Since the title is
the first child of the list we can use the &lt;code&gt;first-child&lt;/code&gt; pseudo-class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sub-site-nav&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;first-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will push  the first element as  far to the left as possible.  All that is
now left is  styling the list  elements themselves  so they  look good.  I also
styled the &lt;code&gt;nav&lt;/code&gt;  itself to  give it a border  line at the  bottom to stand out
from the rest of the page.  Thanks to flexbox it has been dead-simple to evenly
distribute the  items in a  few lines of  CSS instead of  heaving to  resort to
awkward helper-classes or empty &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="document-outline"&gt;
&lt;h2&gt;Document outline&lt;/h2&gt;
&lt;p&gt;The  document outline  is what made  me rewrite all  the templates  almost from
scratch.  The old  outline  was  all flat,  so I  had to  introduce  sectioning
elements where I had  &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements before and  use semantic HTML where ever
possible. In order to make it possible to identify those sections I also had to
add headings  everywhere and  hide them via CSS,  as shown above.  The workshop
should now become more  accessible once more client  software starts supporting
the  outline algorithm.  Go ahead and try it out,  open this page in the &lt;a class="reference external" href="http://gsnedders.html5.org/outliner/"&gt;HTML5
Outliner&lt;/a&gt; and see the result.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-new-blog-navigator"&gt;
&lt;h2&gt;A new blog navigator&lt;/h2&gt;
&lt;p&gt;The sidebar for the blogs has also been changed from the ground up. The old one
was too  bulky and  had a  fancy  "accordion"  feature:  clicking a  year would
un-collapse a list  of sub-entries.  That way  you could  click a year,  then a
month, and you would see all articles for that month right in the side bar.  It
was pretty fancy,  but not very useful and utterly unusable without JavaScript,
so I threw it out.&lt;/p&gt;
&lt;p&gt;The new  navigator is all static:  clicking a year will take you to the archive
of that year instead.  You can  see all articles  from that year in the body of
the page,  and in the  navigator a  sub-list of  months will  appear under that
year.  Clicking a month will  take you to the archive of that month,  narrowing
the body of the page down to only those articles.&lt;/p&gt;
&lt;p&gt;Effectively the  new navigator  has exactly  the same  features as the old one,
except it is static now. This means you will have to load a new page, but since
there is no JavaScript to execute  this will be very fast. The new navigator is
also more accessible because it only lists the relevant items instead of having
an archive of the entire blog at all times.&lt;/p&gt;
&lt;p&gt;Finally, on small screen sizes the navigator is moved down beneath the articles
and all the lists are hidden. They would take up too much screen space, instead
the reader can  click the titles or  the archives and get taken there.  This is
accomplished using flexbox again. Here is the HTML first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blog-body"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        All the articles go here
     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog navigation&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Archives&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          ...
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Categories&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          ...
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Tags&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          ...
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;/* The blog body contains the navigator and the articles list */&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;blog-body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;blog-body&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;/* Move the navigator left from the article */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will put the article(s) and  the navigator horizontally next to each other
and move the  navigator visually  before the  article by  changing  the &lt;code&gt;order&lt;/code&gt;
property. For smaller devices we use a media query to change the flex direction
to a colum, which will put the navigator on top of the articles.  We change the
order to move the navigator down and hide the lists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;media&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;max-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;768px&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c"&gt;/* Re-arrange the articles and navigator vertically */&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;blog-body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c"&gt;/* The navigator comes after the articles now. */&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;blog-body&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c"&gt;/* Hide the navigator lists, they are too large */&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;blog-body&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hamburger-menu-without-javascript"&gt;
&lt;h2&gt;Hamburger menu without JavaScript&lt;/h2&gt;
&lt;p&gt;Every site should provide its  full functionality without requiring JavaScript.
It might  not be as pretty,  but it has to fully work.  The standard navigation
bar example from Bootstrap requires JavaScript for the toggle, but it turns out
that it can  also be accomplished without.  The following  trick comes from the
blog of &lt;a class="reference external" href="http://viralpatel.net/blogs/bootstrap-navbar-menu-without-javascript/"&gt;Viral Patel&lt;/a&gt;, so all credit goes to him.&lt;/p&gt;
&lt;p&gt;Here is the HTML:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar navbar-default"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-toggle-cbox"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-toggle-cbox"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-toggle collapsed"&lt;/span&gt;
             &lt;span class="na"&gt;data-toggle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"collapse"&lt;/span&gt; &lt;span class="na"&gt;data-target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#navbar"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"sr-only"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toggle navigation&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"icon-bar"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"icon-bar"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"icon-bar"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-brand"&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Project name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-collapse collapse"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"nav navbar-nav"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"active"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#about"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;About&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The differences are  the existence of a new  &lt;code&gt;&amp;lt;input type="checkbox"&amp;gt;&lt;/code&gt;  element
and changing the  &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; to a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.  This by itself won't do anything,
we need a few lines of CSS as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;navbar-toggle-cbox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;navbar-toggle-cbox&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;collapse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First we  hide the checkbox  from sight,  then we  use its  state to toggle the
display of the &lt;code&gt;.collapse&lt;/code&gt;.  If JavaScript is available  the new hamburger menu
will work  just like before,  but if  JavaScript is  unavailable the  collapsed
items will still pop up.  It won't be as pretty because there will be no smooth
animation, but it will be usable.&lt;/p&gt;
&lt;p&gt;I consider this a hack because it introduces an extra HTML item, but as long as
there is no built-in  solution in HTML or CSS  every approach is more or less a
hack.&lt;/p&gt;
&lt;/div&gt;
</content><category term="website"></category></entry><entry><title>Feeds are live now</title><link href="http://hiphish.github.io/blog/2015/11/14/feeds-live-now/" rel="alternate"></link><published>2015-11-14T00:00:00+01:00</published><updated>2015-11-14T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-11-14:/blog/2015/11/14/feeds-live-now/</id><summary type="html">&lt;p&gt;RSS- and Atom feeds are live now. You can subscribe to an entire blog using the
links in the navigator or you can subscribe to a particular category in a blog.
For that navigate to the category using either the navigator or by clicking the
category button of an article …&lt;/p&gt;</summary><content type="html">&lt;p&gt;RSS- and Atom feeds are live now. You can subscribe to an entire blog using the
links in the navigator or you can subscribe to a particular category in a blog.
For that navigate to the category using either the navigator or by clicking the
category button of an article.&lt;/p&gt;
</content><category term="website"></category></entry><entry><title>We are live!</title><link href="http://hiphish.github.io/blog/2015/11/11/we-are-live/" rel="alternate"></link><published>2015-11-11T00:00:00+01:00</published><updated>2015-11-11T00:00:00+01:00</updated><author><name>HiPhish</name></author><id>tag:hiphish.github.io,2015-11-11:/blog/2015/11/11/we-are-live/</id><summary type="html">&lt;p&gt;The Workshop blog is finally up and running, in all its static glory. This
makes the site practically complete, at least as complete as a website can ever
be anyway. It also works great with my &lt;a class="reference external" href="https://gitlab.com/HiPhish/Multiblog-Pelican"&gt;Multiblog&lt;/a&gt; plugin.&lt;/p&gt;
&lt;p&gt;I wanted to be able to have more than one blog on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Workshop blog is finally up and running, in all its static glory. This
makes the site practically complete, at least as complete as a website can ever
be anyway. It also works great with my &lt;a class="reference external" href="https://gitlab.com/HiPhish/Multiblog-Pelican"&gt;Multiblog&lt;/a&gt; plugin.&lt;/p&gt;
&lt;p&gt;I wanted to be able to have more than one blog on the site. A blog can be a
place for personal ramblings about things no one else care about, but a blog
can also be the primary source of news. Mixing these two seemed like a very bad
idea to me; people might be only interested in one thing, for example Grid
Framework in my case and they don't want their time wasted with other products
and completely unrelated topics.&lt;/p&gt;
&lt;p&gt;So here is my solution: have multiple blogs on the site. A blog consists of
articles and the interface. Blogs can share articles, and the interface is
generated accordingly. The interface is all you see around the main content:
tabs, categories, archives, period archives and so on. I could for example have
one blog for every project and one blog for all projects. People could either
subscribe to the blogs they care about or they subscribe to the aggregate blog.
Anything is possible really.&lt;/p&gt;
&lt;p&gt;As for the blog interface itself, my main goal was in making it easy to
navigate. Originally I had intended for a "temple"-like layout, also called the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Holy_Grail_(web_design)"&gt;"Holy Grail"&lt;/a&gt; of web
design because finding a hack-free implementation used to be like searching for
the Holy Grail. Here is a sketch of what it looks like:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃          Header         ┃
┣━━━┯━━━━━━━━━━━━━━━━━┯━━━┫
┃   │                 │   ┃
┃ N │     Content     │ A ┃
┃ a │                 │ d ┃
┃ v │                 │ s ┃
┃   │                 │   ┃
┃   │ &amp;lt;-           -&amp;gt; │   ┃
┣━━━┷━━━━━━━━━━━━━━━━━┷━━━┫
┃          Footer         ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
&lt;/pre&gt;
&lt;p&gt;Thanks to the new flexbox features of CSS this layout is now trivial to
implement and the search is over, check out &lt;a class="reference external" href="http://philipwalton.github.io/solved-by-flexbox/"&gt;Solved by Flexbox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, I decided to opt out of the right column. For one it was making the
content look too crammed in between, and the other reason is that I had no idea
what to put in there. I wouldn't use ads because you need &lt;em&gt;a lot&lt;/em&gt; of clicks to
make them worthwhile and this simply is not one of those blogs where I can put
out content worth reading all the time.&lt;/p&gt;
&lt;p&gt;The left column is used for navigation. This includes period-archives,
categories, tags and authors. I went fancy with an accordion-style tree of
articles, which sadly does not work without JavaScript. That's why the title of
every navigator menu is also a hyperlink to the corresponding archive. Since
archives are nested into archives I also added a navigation breadcrumbs menu
above the content. The finished layout looks like this:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃          Header         ┃
┣━━━┯━━━━━━━━━━━━━━━━━━━━━┫
┃   │YYYY/MM/DD/slug      ┃
┃ N ├─────────────────────┃
┃ a │       Content       ┃
┃ v │                     ┃
┃   │                     ┃
┃   │                     ┃
┃   │ &amp;lt;-               -&amp;gt; ┃
┣━━━┷━━━━━━━━━━━━━━━━━━━━━┫
┃          Footer         ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
&lt;/pre&gt;
&lt;p&gt;The URL of each page is chosen so that moving one directory up in the hierarchy
will move you to the parent archive. For instance, a blog post has the URL
&lt;code&gt;website.com/blog/year/month/day/slug&lt;/code&gt;. Removing the &lt;cite&gt;slug&lt;/cite&gt; will take you
to the daily archive, removing the day takes you to the monthly archive and
removing the month takes you to the yearly archive. Removing even the year
takes you to the index of the blog. Pretty neat. If changing the URL is too
cumbersome one can also use the breadcrumbs at the top. In my case there are no
daily archives because I will rarely ever write more than one post per day.&lt;/p&gt;
&lt;p&gt;There is no way to subscribe to a blog at the moment, but making Pelican
generate RSS feeds should be trivial. I just haven't looked into yet, I figured
it was better to release now rather than holding back just because of a feature
that does not affect the blogs themselves.&lt;/p&gt;
&lt;p&gt;Some aspects of the blog might seem redundant, like having an &lt;em&gt;authors&lt;/em&gt; archive
when there is only one author on the site. That's me "eating my own dogfood", I
am using a feature because I want to demonstrate its purpose.&lt;/p&gt;
&lt;p&gt;Well, that's it for now, we'll see where this ride will take be from now on.
It's going to be interesting :)&lt;/p&gt;
</content><category term="website"></category></entry></feed>